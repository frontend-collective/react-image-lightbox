// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot Testing Lightbox renders properly" 1`] = `
<ReactImageLightbox
  animationDisabled={false}
  animationDuration={300}
  animationOnKeyInput={false}
  clickOutsideToClose={true}
  closeLabel="Close lightbox"
  discourageDownloads={false}
  enableZoom={true}
  imageCaption={null}
  imageCrossOrigin={null}
  imageLoadErrorMessage="This image failed to load"
  imagePadding={10}
  imageTitle={null}
  keyRepeatKeyupBonus={40}
  keyRepeatLimit={180}
  mainSrc="/fake/image/src.jpg"
  mainSrcThumbnail={null}
  nextLabel="Next image"
  nextSrc={null}
  nextSrcThumbnail={null}
  onAfterOpen={[Function]}
  onCloseRequest={[Function]}
  onImageLoadError={[Function]}
  onMoveNextRequest={[Function]}
  onMovePrevRequest={[Function]}
  prevLabel="Previous image"
  prevSrc={null}
  prevSrcThumbnail={null}
  reactModalProps={
    Object {
      "appElement": <div
        aria-hidden="true"
      />,
    }
  }
  reactModalStyle={Object {}}
  toolbarButtons={null}
  wrapperClassName=""
  zoomInLabel="Zoom in"
  zoomOutLabel="Zoom out"
>
  <Modal
    appElement={
      <div
        aria-hidden="true"
      />
    }
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="Lightbox"
    isOpen={true}
    onAfterOpen={[Function]}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "backgroundColor": "transparent",
          "border": "none",
          "borderRadius": 0,
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "padding": 0,
          "right": 0,
          "top": 0,
        },
        "overlay": Object {
          "backgroundColor": "transparent",
          "zIndex": 1000,
        },
      }
    }
  >
    <ModalPortal
      appElement={
        <div
          aria-hidden="true"
        />
      }
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      closeTimeoutMS={0}
      contentLabel="Lightbox"
      defaultStyles={
        Object {
          "content": Object {
            "WebkitOverflowScrolling": "touch",
            "background": "#fff",
            "border": "1px solid #ccc",
            "borderRadius": "4px",
            "bottom": "40px",
            "left": "40px",
            "outline": "none",
            "overflow": "auto",
            "padding": "20px",
            "position": "absolute",
            "right": "40px",
            "top": "40px",
          },
          "overlay": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.75)",
            "bottom": 0,
            "left": 0,
            "position": "fixed",
            "right": 0,
            "top": 0,
          },
        }
      }
      isOpen={true}
      onAfterOpen={[Function]}
      onRequestClose={[Function]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "backgroundColor": "transparent",
            "border": "none",
            "borderRadius": 0,
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "padding": 0,
            "right": 0,
            "top": 0,
          },
          "overlay": Object {
            "backgroundColor": "transparent",
            "zIndex": 1000,
          },
        }
      }
    >
      <div
        aria-modal="true"
        className="ReactModal__Overlay ReactModal__Overlay--after-open"
        onClick={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        style={
          Object {
            "backgroundColor": "transparent",
            "bottom": 0,
            "left": 0,
            "position": "fixed",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <div
          aria-label="Lightbox"
          className="ReactModal__Content ReactModal__Content--after-open"
          onClick={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          style={
            Object {
              "WebkitOverflowScrolling": "touch",
              "background": "#fff",
              "backgroundColor": "transparent",
              "border": "none",
              "borderRadius": 0,
              "bottom": 0,
              "left": 0,
              "outline": "none",
              "overflow": "hidden",
              "padding": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          tabIndex="-1"
        >
          <div
            className="ril-outer outer outerAnimating  "
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseMove={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            onWheel={[Function]}
            style={
              Object {
                "animationDirection": "reverse",
                "animationDuration": "300ms",
                "transition": "opacity 300ms",
              }
            }
            tabIndex="-1"
          >
            <div
              className="ril-inner inner"
              onClick={[Function]}
            >
              <div
                className="ril-image-current image ril-not-loaded"
                key="/fake/image/src.jpgi0"
                style={
                  Object {
                    "transform": "translate3d(0px,0px,0) scale3d(NaN,NaN,1)",
                  }
                }
              >
                <div
                  className="loadingContainer"
                >
                  <div
                    className="ril-loading-circle loadingCircle loadingContainer__icon"
                  >
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="0"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="1"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="2"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="3"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="4"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="5"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="6"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="7"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="8"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="9"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="10"
                    />
                    <div
                      className="ril-loading-circle-point loadingCirclePoint"
                      key="11"
                    />
                  </div>
                </div>
              </div>
            </div>
            <div
              className="ril-toolbar toolbar"
            >
              <ul
                className="ril-toolbar-left toolbarSide toolbarLeftSide"
              >
                <li
                  className="ril-toolbar__item toolbarItem"
                >
                  <span
                    className="ril-toolbar__item__child toolbarItemChild"
                  />
                </li>
              </ul>
              <ul
                className="ril-toolbar-right toolbarSide toolbarRightSide"
              >
                <li
                  className="ril-toolbar__item toolbarItem"
                >
                  <button
                    aria-label="Zoom in"
                    className="ril-zoom-in toolbarItemChild builtinButton zoomInButton"
                    disabled={false}
                    key="zoom-in"
                    onClick={[Function]}
                    type="button"
                  />
                </li>
                <li
                  className="ril-toolbar__item toolbarItem"
                >
                  <button
                    aria-label="Zoom out"
                    className="ril-zoom-out toolbarItemChild builtinButton zoomOutButton builtinButtonDisabled"
                    disabled={true}
                    key="zoom-out"
                    type="button"
                  />
                </li>
                <li
                  className="ril-toolbar__item toolbarItem"
                >
                  <button
                    aria-label="Close lightbox"
                    className="ril-close ril-toolbar__item__child toolbarItemChild builtinButton closeButton"
                    key="close"
                    onClick={[Function]}
                    type="button"
                  />
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </ModalPortal>
  </Modal>
</ReactImageLightbox>
`;
